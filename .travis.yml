# Here, we test with both stack and cabal. The reasons to test with cabal are
# twofold:
#
# 1. We want to ensure that the bootstrapping case works
#
# 2. Building with stack would be too easy a test, since it guarantees us a
# sane build environment. In CI, we want to make our life more difficult, so we
# use cabal without any Stackage snapshots.
#

language: c
sudo: false

#deploy:
#  provider: releases
#  api_key:
#    secure: pzc6NzPITNbBgFxWvFRxeRiKO3HI+Bbs6HGLYYP8LOLaXbjGZGu+p9zvxi/eR4ZIeVw5ze+OE8zMowNOTHuzt9HJVR5kgE9fxf/OEUrfAEumYCHRXil2znGhSSzrgfcvN0RU6Ex78ViTIxqBy1UNbZnp2YjNQ7dAsePb0kGo8w/clHsjrMYJtMcSHnAp/LJD8gj/QUCcMa/1ycLZd9cTuByhdZkPBynqBC/ZSyq/gj4YXP4ryDuNadnHo1YIsHCnH854jGfziSmhZOzQlU1X1fTYAsL4i4rYePvdxxgTv7FxCNe+AeJLDXOkEJuIhhHxyxpmtasle5GB47dCocm1Z+7C4xbLBamy+tJ7O336dHbvEHuS6NFE+IIGYvra1nZhe96+clSJu917LoNiFsNMI5um0OKfzC9r9ppL7zb2vFijVtfNlJYLqfSX8moI0pKYlhYhFTK2gkDZFRYFEvd8QOn7is3yHAjKm1HLcTTkY3FAHNpsRx/HF4PfVDPHpxJo+B2+GOGVEqxxTPclUEdfuLR4+Qo7/bllPTl3sZH73Gh8cYvOQc7LskmC+nEJkpJU4JtnfTBmwUUzrNlrDLf6tYR22X513ZWaAs9IjQBTV5jMxsn/YumzOGDZeOMz/Z6OZc5aqOu8euyDusYJu4RQLKqenhinvpp8LZmiRbB6r74=
#  file:
#    - "PayChanServer-x86_64-linux"
#    - "PayChanServer-x86_64-osx"
#  skip_cleanup: true
#  on:
#    tags: true
#    repo: runeksvendsen/restful-payment-channel-server
#  overwrite: true

cache:
    directories:
        - $HOME/.ghc
        - $HOME/.cabal
        - $HOME/.stack

matrix:
  include:
    ## -STACK
    - env: BUILD=stack GHCVER=7.10.3 STACK_YAML=stack.yaml
      compiler: ": #stack 7.10.3"
      addons: {apt: {packages: [cabal-install-head,ghc-7.10.3], sources: [hvr-ghc]}}

    - env: BUILD=stack STACK_YAML=stack.yaml
      compiler: ": #stack 7.10.3 osx"
      os: osx

#  allow_failures:
#    - env: BUILD=cabal CABALVER=head GHCVER=head

# Note: the distinction between `before_install` and `install` is not important.
# - in before_install we install build tools
# - in install we install (haskell) dependencies
before_install:
 - unset CC
 - case "$BUILD" in
     stack)
       export PATH=$HOME/.local/bin:/opt/ghc/$GHCVER/bin:$PATH;;
     cabal)
       export PATH=$HOME/.cabal/bin:/opt/ghc/$GHCVER/bin:/opt/cabal/$CABALVER/bin:$PATH;;
   esac
 - ./.travis-setup.sh

install:
 - echo "$(ghc --version) [$(ghc --print-project-git-commit-id 2> /dev/null || echo '?')]"
 - case "$BUILD" in
     stack)
       stack install;;
     cabal)
       cabal --version;
       travis_retry cabal update;
       rm -f $(stack path --dist-dir)/stack-*.tar.gz;
       stack sdist --pvp-bounds=both;
       tar xf $(stack path --dist-dir)/stack-*.tar.gz --wildcards --strip-components=1 '*/stack.cabal';
       cabal install --only-dependencies --enable-tests --enable-benchmarks --force-reinstalls --ghc-options=-O0;;
   esac

script:
 - case "$BUILD" in
     stack)
       stack --no-terminal test --haddock --no-haddock-deps;;
     cabal)
       cabal configure --enable-tests --enable-benchmarks -v2 --ghc-options="-O0 -Werror";
       cabal build;
       cabal test;
       cabal check;
       cabal sdist;
       cabal copy;
       cd test/integration;
       true stack setup;
       true stack test;
       cd ../..;
       SRC_TGZ=$(cabal info . | awk '{print $2;exit}').tar.gz &&
       (cd dist && cabal install --force-reinstalls "$SRC_TGZ");;
   esac
