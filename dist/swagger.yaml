swagger: '2.0'

info:
  version: "0.1.0"
  title: RESTful Bitcoin payment channel protocol
  description: |
    A Bitcoin payment channel enables instant, secure transfer of bitcoins from one party to another. The intended use is consumer-to-merchant payments, allowing a consumer to make many small payments to a merchant -- with whom the consumer has an open payment channel -- while only paying the Bitcoin transaction fee once, when the channel is settled.
    
    The payment server speaking this protocol is the recipient of value, operating on behalf of a content delivery server who receives value from a customer/client.
  
    The content delivery server passes requests supplied by the client (payer) to the payment server, and delivers content to the client dependent on the response from the payment server. 
    
host: paychan.runeks.me #Bitcoin testnet server
# basePath: /v1
schemes:
  - https

paths:
  /fundingInfo:
    get:
      summary: Retrieve information about how to fund a new payment channel.
      description: |
        Before opening a payment channel with the server, the client must first acquire the server public key, in order to calculate a funding address for the channel.
      
        The client will first calculate the funding address, confirm that it matches the server's, then pay to the funding address, and wait until the funding transaction has the server-specified number of confirmations.
        
        After this, the client will create a new payment of value equal to the server-specified channel open price, and POST this to the channel-open URL (see <<_createpaymentchannel,here>>), in order to open the channel.
      operationId: getFundingInfo
      parameters:
        - $ref: "#/parameters/clientPubKeyParam"
        - $ref: "#/parameters/expTimeParam"
      responses:
        200:
          description: Proceed with funding
          schema:
            $ref: "#/definitions/FundingInfo"
        400:
          description: Invalid input (see header for error description)
  
  /channels/new:
    post:
      summary: Create a new payment channel
      description: |
        After publishing the Bitcoin transaction which pays to the channel funding address, and waiting for the specified number of confirmations, the client will POST a payment paying the server's specified channel open price to the channel open URL, which is the URL returned by <<_getfundinginfo,fundingInfo>> plus the 'change_address' parameter.
      
      operationId: createPaymentChannel
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - $ref: "#/parameters/clientPubKeyParam"
        - $ref: "#/parameters/expTimeParam"
        - name: change_address
          in: query
          description: Client/value sender change address. When the channel is closed, any value not transferred to the server over the channel is returned to this address.
          type: string
          required: true
        - name: payment
          in: body
          description: 'Channel payment. New channel payment transferring additional value to the server'
          required: true
          schema:
            $ref: "#/definitions/Payment"
      responses:
        201:
          description: Channel created
          schema:
            $ref: "#/definitions/ChanOpenResult"
        400:
          description: Invalid input (see header for error description)
          
  /channels/{funding_txid}/{funding_vout}:
    put:
      summary: Make payment over an existing payment channel
      description: 'Example URL: http://pay.example.com/channels/f4cfa4a18d474d7e7c7d18edbb5c9c37293eea1136d2a01788342211c5e3d3f0/3'
      operationId: payPaymentChannel
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - $ref: "#/parameters/fundingTxIdParam"
        - $ref: "#/parameters/fundingTxVoutParam"
        - name: change_address
          in: query
          description: New client/value sender change address (optional). If the client wishes to update its change address, it will set this parameter to the new change address and provide a Payment with the specified change address.
          type: string
          required: false
        - in: body
          name: payment
          description: 'Channel payment. New channel payment transferring additional value to the server'
          required: true
          schema:
            $ref: "#/definitions/Payment"
      responses:
        200:
          description: Payment received
          schema:
            $ref: "#/definitions/PaymentResult"
        400:
          description: Invalid input (see header for error description)
        404:
          description: No such payment channel
    delete:
      summary: Delete an existing payment channel
      description: 'Example URL: http://pay.example.com/channels/f4cfa4a18d474d7e7c7d18edbb5c9c37293eea1136d2a01788342211c5e3d3f0/3'
      operationId: deletePaymentChannel
      parameters:
        - $ref: "#/parameters/fundingTxIdParam"
        - $ref: "#/parameters/fundingTxVoutParam"
        - in: body
          name: payment
          description: 'Most recent channel payment. The most recent payment previously sent to the server is included here as a form of authentication token, proving the client is party to the payment channel in question.'
          required: true
          schema:
            $ref: "#/definitions/Payment"
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        200:
          description: Channel closed, funds settled. The settling transaction has been published to the Bitcoin network.
        400:
          description: Invalid input (see header for error description)
        404:
          description: No such payment channel

parameters:
    clientPubKeyParam:
      name: client_pubkey
      in: query
      description: Client/value sender public key. Hex-encoded, compressed Secp256k1 pubkey, 33 bytes.
      required: true
      type: string
      # example: '029b5549e8cac42d27051956925d8176408b2183ba357850f58320ad5876b9c13f'
    expTimeParam:
      name: exp_time
      in: query
      description: The expiration date/time for the channel (Unix timestamp). After this point in time the channel refund transaction becomes valid, allowing the client to reclaim the channel funds in case the server goes missing.
      required: true
      type: integer
      format: int64
    fundingTxIdParam:
      name: funding_txid
      in: path
      description: Transaction ID of the transaction which pays to the channel funding address.
      required: true
      type: string
    fundingTxVoutParam:
      name: funding_vout
      in: path
      description: Output index/vout of the output in the transaction paying to the channel funding address.
      required: true
      type: string
      
definitions:
  FundingInfo:
    type: object
    required:
      - server_pubkey
      - funding_address
      - channel_open_uri
      - open_price
      - funding_tx_min_conf
    properties:
      server_pubkey:
        description: Server/value receiver public key. Hex-encoded, compressed Secp256k1 pubkey, 33 bytes.
        type: string
        example: 029b5549e8cac42d27051956925d8176408b2183ba357850f58320ad5876b9c13f"
      funding_address:
        description: Payment channel funding address. Send bitcoins to this address to fund a new channel.
        type: string
        example: 2NCTirSGjFM8T7hUow3AcfyFaw1N1APnYuP
      channel_open_uri:
        description: The URL which must be POSTed to in order to open a new payment channel. See <<_createpaymentchannel,here>>.
        type: string
        format: uri
      open_price:
        description: Price (in satoshis) for opening a channel with the given {exp_time}. This amount is paid in the initial channel payment when creating a new channel. May be zero, in which case a payment of zero value is transferred, ensuring that the channel can be closed at any time.
        type: integer
        format: int64
        minimum: 0
        example: 25000
      funding_tx_min_conf:
        description: Minimum confirmation count that the funding transaction must have before proceeding with opening a new channel.
        type: integer
        format: int32 
  ChanOpenResult:
    type: object
    required:
      - channel_uri
      - payment_result
    properties:
      channel_uri:
        description: The URL of the newly opened channel. Payments are PUT on this URL.
        type: string
        format: uri
      payment_result:
        $ref:  "#/definitions/PaymentResult"  
  Payment:
    type: object
    required:
      - payment_data
    properties:
      payment_data:
        description: Opaque payment data, base64-encoded
        type: string
  PaymentResult:
    type: object
    required:
      - channel_value_left
      - value_received
    properties:
      channel_value_left:
        description: Remaining channel value. This is the amount that the client/sender would receive if the channel was closed now.
        type: integer
        format: int64
        minimum: 0
      value_received:
        description: Value of the payment that was just received. This is the additional value assigned to the receiver/server with this payment.
        type: integer
        format: int64
        minimum: 0
  
      